<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblBaoCaoThongKeVanBanDi" xml:space="preserve">
    <value>Báo cáo thống kê văn bản đi</value>
  </data>
  <data name="lblBaoCaoThongKeVBDi" xml:space="preserve">
    <value>BÁO CÁO THỐNG KÊ VĂN BẢN ĐI</value>
  </data>
  <data name="lblBaoCaoThongKeVBDiTongHop" xml:space="preserve">
    <value>Báo cáo thống kê văn bản đi tổng hợp</value>
  </data>
  <data name="lblBatDauTu" xml:space="preserve">
    <value>Bắt đầu từ</value>
  </data>
  <data name="lblChonDonViSoanThao" xml:space="preserve">
    <value>Chọn phòng ban/CN soạn thảo</value>
  </data>
  <data name="lblChonLoaiVanBan" xml:space="preserve">
    <value>Chọn loại văn bản</value>
  </data>
  <data name="lblChonNguoiKy" xml:space="preserve">
    <value>Chọn người ký</value>
  </data>
  <data name="lblChonSoVanBan" xml:space="preserve">
    <value>Chọn sổ văn bản</value>
  </data>
  <data name="lblDong" xml:space="preserve">
    <value>Đóng</value>
  </data>
  <data name="lblDonViSoanThao" xml:space="preserve">
    <value>Phòng ban/CN soạn thảo</value>
  </data>
  <data name="lblKetThuc" xml:space="preserve">
    <value>Kết thúc</value>
  </data>
  <data name="lblLoaiVanBan" xml:space="preserve">
    <value>Loại văn bản</value>
  </data>
  <data name="lblNam" xml:space="preserve">
    <value>Năm</value>
  </data>
  <data name="lblNgay" xml:space="preserve">
    <value>Ngày</value>
  </data>
  <data name="lblNgayBanHanh" xml:space="preserve">
    <value>Ngày ban hành</value>
  </data>
  <data name="lblNgayVanBan" xml:space="preserve">
    <value>Ngày văn bản</value>
  </data>
  <data name="lblNguoiKy" xml:space="preserve">
    <value>Người ký</value>
  </data>
  <data name="lblNoiNhan" xml:space="preserve">
    <value>Nơi nhận</value>
  </data>
  <data name="lblPhamVi" xml:space="preserve">
    <value>Phạm vi</value>
  </data>
  <data name="lblSoDKVanBanDi" xml:space="preserve">
    <value>SỔ ĐĂNG KÝ VĂN BẢN ĐI</value>
  </data>
  <data name="lblSoKiHieu" xml:space="preserve">
    <value>Số kí hiệu</value>
  </data>
  <data name="lblSoLuong" xml:space="preserve">
    <value>Số lượng</value>
  </data>
  <data name="lblSoVanBan" xml:space="preserve">
    <value>Sổ văn bản</value>
  </data>
  <data name="lblThang" xml:space="preserve">
    <value>Tháng</value>
  </data>
  <data name="lblThongKeTongHopVBDi" xml:space="preserve">
    <value>Thống kê tổng hợp văn bản đi</value>
  </data>
  <data name="lblTimKiem" xml:space="preserve">
    <value>Tìm kiếm</value>
  </data>
  <data name="lblTongSoVanBanLa" xml:space="preserve">
    <value>Tổng số văn bản là</value>
  </data>
  <data name="lblTrangChu" xml:space="preserve">
    <value>Trang chủ</value>
  </data>
  <data name="lblTrichYeu" xml:space="preserve">
    <value>Trích yếu</value>
  </data>
  <data name="lblTuKhoa" xml:space="preserve">
    <value>Từ khóa</value>
  </data>
  <data name="lblTuKhoaTimKiem" xml:space="preserve">
    <value>Từ khóa tìm kiếm</value>
  </data>
  <data name="lblVanBan" xml:space="preserve">
    <value>văn bản</value>
  </data>
  <data name="lblVanBanDi" xml:space="preserve">
    <value>Văn bản đi</value>
  </data>
  <data name="lblVanBanDiMat" xml:space="preserve">
    <value>zzzz</value>
  </data>
  <data name="lblVanBanDiThuong" xml:space="preserve">
    <value>Văn bản đi thường</value>
  </data>
  <data name="lblInThongKe" xml:space="preserve">
    <value>In thống kê</value>
  </data>
  <data name="lblInThongKeVanBanDi" xml:space="preserve">
    <value>In thống kê văn bản đi</value>
  </data>
  <data name="lblSTT" xml:space="preserve">
    <value>STT</value>
  </data>
  <data name="lblVietNam" xml:space="preserve">
    <value>Việt Nam</value>
  </data>
  <data name="lblXuatExcel" xml:space="preserve">
    <value>Xuất Excel</value>
  </data>
  <data name="lblXuatWord" xml:space="preserve">
    <value>Xuất Word</value>
  </data>
</root>