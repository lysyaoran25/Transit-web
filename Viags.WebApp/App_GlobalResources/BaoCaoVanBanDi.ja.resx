<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblBaoCaoThongKeVanBanDi" xml:space="preserve">
    <value>統計レポート文書は行きます</value>
  </data>
  <data name="lblBaoCaoThongKeVBDi" xml:space="preserve">
    <value>統計レポート文書に</value>
  </data>
  <data name="lblBaoCaoThongKeVBDiTongHop" xml:space="preserve">
    <value>統計レポート文書は、合成行きます</value>
  </data>
  <data name="lblBatDauTu" xml:space="preserve">
    <value>出発</value>
  </data>
  <data name="lblChonDonViSoanThao" xml:space="preserve">
    <value>ユニットエディタを選択</value>
  </data>
  <data name="lblChonLoaiVanBan" xml:space="preserve">
    <value>テキストの種類を選択</value>
  </data>
  <data name="lblChonNguoiKy" xml:space="preserve">
    <value>signeesを選択</value>
  </data>
  <data name="lblChonSoVanBan" xml:space="preserve">
    <value>テキストブックを選択します</value>
  </data>
  <data name="lblDong" xml:space="preserve">
    <value>閉じました</value>
  </data>
  <data name="lblDonViSoanThao" xml:space="preserve">
    <value>製図ユニット</value>
  </data>
  <data name="lblInThongKe" xml:space="preserve">
    <value>統計で</value>
  </data>
  <data name="lblInThongKeVanBanDi" xml:space="preserve">
    <value>印刷テキストの統計が行きます</value>
  </data>
  <data name="lblKetThuc" xml:space="preserve">
    <value>結論を下します</value>
  </data>
  <data name="lblLoaiVanBan" xml:space="preserve">
    <value>ドキュメントの種類</value>
  </data>
  <data name="lblNam" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="lblNgay" xml:space="preserve">
    <value>日</value>
  </data>
  <data name="lblNgayBanHanh" xml:space="preserve">
    <value>発行日</value>
  </data>
  <data name="lblNgayVanBan" xml:space="preserve">
    <value>テキストの日</value>
  </data>
  <data name="lblNguoiKy" xml:space="preserve">
    <value>署名者</value>
  </data>
  <data name="lblNoiNhan" xml:space="preserve">
    <value>受信者</value>
  </data>
  <data name="lblPhamVi" xml:space="preserve">
    <value>スコープ</value>
  </data>
  <data name="lblSoDKVanBanDi" xml:space="preserve">
    <value>ブックに登録書類</value>
  </data>
  <data name="lblSoKiHieu" xml:space="preserve">
    <value>番号記号</value>
  </data>
  <data name="lblSoLuong" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="lblSoVanBan" xml:space="preserve">
    <value>本を書きます</value>
  </data>
  <data name="lblSTT" xml:space="preserve">
    <value>注文番号</value>
  </data>
  <data name="lblThang" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="lblThongKeTongHopVBDi" xml:space="preserve">
    <value>どこへ行くの統計シンセティックテキスト</value>
  </data>
  <data name="lblTimKiem" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="lblTongSoVanBanLa" xml:space="preserve">
    <value>総テキストです</value>
  </data>
  <data name="lblTrangChu" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="lblTrichYeu" xml:space="preserve">
    <value>抽象的な</value>
  </data>
  <data name="lblTuKhoa" xml:space="preserve">
    <value>キーワード</value>
  </data>
  <data name="lblTuKhoaTimKiem" xml:space="preserve">
    <value>キーワード探索</value>
  </data>
  <data name="lblVanBan" xml:space="preserve">
    <value>ドキュメント</value>
  </data>
  <data name="lblVanBanDi" xml:space="preserve">
    <value>旅券</value>
  </data>
  <data name="lblVanBanDiMat" xml:space="preserve">
    <value>旅行書類の機密</value>
  </data>
  <data name="lblVanBanDiThuong" xml:space="preserve">
    <value>テキストは、しばしば行きます</value>
  </data>
  <data name="lblVietNam" xml:space="preserve">
    <value>ベトナム</value>
  </data>
  <data name="lblXuatExcel" xml:space="preserve">
    <value>輸出エクセル</value>
  </data>
  <data name="lblXuatWord" xml:space="preserve">
    <value>輸出ワード</value>
  </data>
</root>