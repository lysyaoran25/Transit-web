<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="lblBatBuocNhapThongTin" xml:space="preserve">
    <value>必須情報</value>
  </data>
  <data name="lblCacTruongCoDau" xml:space="preserve">
    <value>マークされたフィールド</value>
  </data>
  <data name="lblChiTietDonVi" xml:space="preserve">
    <value>716/5000
必須情報
マークされたフィールド
詳細なユニット</value>
  </data>
  <data name="lblChonDonVi" xml:space="preserve">
    <value>単位、部署を選択</value>
  </data>
  <data name="lblChonNguoiDaiDien" xml:space="preserve">
    <value>代表的な選択</value>
  </data>
  <data name="lblCoLoiXayRa" xml:space="preserve">
    <value>エラーが発生しました。！</value>
  </data>
  <data name="lblDaCoLoiXayRa" xml:space="preserve">
    <value>エラー発生がありました</value>
  </data>
  <data name="lblDiaChi" xml:space="preserve">
    <value>アドレス</value>
  </data>
  <data name="lblDienThoai" xml:space="preserve">
    <value>電話</value>
  </data>
  <data name="lblDong" xml:space="preserve">
    <value>閉じました</value>
  </data>
  <data name="lblDongTatCa" xml:space="preserve">
    <value>すべて閉じます</value>
  </data>
  <data name="lblDonVi" xml:space="preserve">
    <value>ユニット</value>
  </data>
  <data name="lblDonViCapTren" xml:space="preserve">
    <value>優れたユニット</value>
  </data>
  <data name="lblDonViPhongBan" xml:space="preserve">
    <value>単位、部署</value>
  </data>
  <data name="lblFax" xml:space="preserve">
    <value>ファックス</value>
  </data>
  <data name="lblHeThong" xml:space="preserve">
    <value>システム</value>
  </data>
  <data name="lblHienThi" xml:space="preserve">
    <value>ショー</value>
  </data>
  <data name="lblLuu" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="lblLuuY" xml:space="preserve">
    <value>注意</value>
  </data>
  <data name="lblMoTatCa" xml:space="preserve">
    <value>すべて開きます</value>
  </data>
  <data name="lblNgayCauHinh" xml:space="preserve">
    <value>日付の設定</value>
  </data>
  <data name="lblNguoiNhanCV" xml:space="preserve">
    <value>受信者のCV</value>
  </data>
  <data name="lblNguoiNhanVB" xml:space="preserve">
    <value>受信者のテキスト</value>
  </data>
  <data name="lblNhapDiaChi" xml:space="preserve">
    <value>アドレスを入力してください</value>
  </data>
  <data name="lblNhapLai" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="lblNhapNgayCauhinh" xml:space="preserve">
    <value>設定を入力します</value>
  </data>
  <data name="lblNhapSoDT" xml:space="preserve">
    <value>自分の電話番号を入力</value>
  </data>
  <data name="lblNhapSoFax" xml:space="preserve">
    <value>ファックスを入力してください</value>
  </data>
  <data name="lblNhapSoThuTu" xml:space="preserve">
    <value>番号順の種類を入力します。</value>
  </data>
  <data name="lblNhapTenDonvi" xml:space="preserve">
    <value>単位、部署の名前を入力します。</value>
  </data>
  <data name="lblNhapTenVietTat" xml:space="preserve">
    <value>略称を入力してください</value>
  </data>
  <data name="lblPhongBan" xml:space="preserve">
    <value>部門</value>
  </data>
  <data name="lblSapXepDonVi" xml:space="preserve">
    <value>ソートユニット、部門</value>
  </data>
  <data name="lblSoFax" xml:space="preserve">
    <value>ファクス番号</value>
  </data>
  <data name="lblSuDungPhieuTrinh" xml:space="preserve">
    <value>クーポンを使用してください</value>
  </data>
  <data name="lblSuSungSoVB" xml:space="preserve">
    <value>教科書を使用して、</value>
  </data>
  <data name="lblTenDonVi" xml:space="preserve">
    <value>装置名</value>
  </data>
  <data name="lblTenDonViPhongBan" xml:space="preserve">
    <value>単位、部署の名前</value>
  </data>
  <data name="lblTenPhongBan" xml:space="preserve">
    <value>部門名</value>
  </data>
  <data name="lblTenVietTat" xml:space="preserve">
    <value>略語</value>
  </data>
  <data name="lblThemLienTiep" xml:space="preserve">
    <value>行を追加します。</value>
  </data>
  <data name="lblThemMoi" xml:space="preserve">
    <value>引っ越し先</value>
  </data>
  <data name="lblThemMoiDonVi" xml:space="preserve">
    <value>新しいユニットや部門を追加</value>
  </data>
  <data name="lblThoat" xml:space="preserve">
    <value>出口</value>
  </data>
  <data name="lblThongBao" xml:space="preserve">
    <value>通知します</value>
  </data>
  <data name="lblThuTu" xml:space="preserve">
    <value>オーダー</value>
  </data>
  <data name="lblTieuDe" xml:space="preserve">
    <value>ユニット管理、ボードルーム</value>
  </data>
  <data name="lblTrangChu" xml:space="preserve">
    <value>ホーム</value>
  </data>
  <data name="lblTrangThai" xml:space="preserve">
    <value>状態</value>
  </data>
  <data name="lblTruSoChinh" xml:space="preserve">
    <value>本部</value>
  </data>
</root>